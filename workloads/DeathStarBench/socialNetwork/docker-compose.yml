version: "3.8"
services:
  # monitor:
  #   image: zjia/social-network-monitor:bionic
  #   hostname: monitor
  #   restart: always
  #   entrypoint: /monitor/monitor
  #   volumes:
  #     - ${SRC_DIR:?}/monitor/build:/monitor
  #     - /tmp/monitor:/tmp/monitor
  #   environment:
  #     - SNAPSHOT_SAVE_PATH=/tmp/monitor/snapshot
  #     - MONITOR_INTERVAL_IN_MS=20
  #     - SNAPSHOT_FLUSH_INTERVAL_IN_MS=10000
  faas-engine:
    image: ubuntu:bionic
    # hostname: faas-engine
    entrypoint:
      - /faas/bin/release/engine
      - --gateway_addr=faas-gateway
      - --root_path_for_ipc=/tmp/faas/ipc
      - --func_config_file=/faas/tmp/socialnetwork.json
      - --num_io_workers=2
      - --gateway_conn_per_worker=16
      # - --engine_tcp_port=9999
      # - --func_worker_use_engine_socket
      # - --func_worker_pipe_direct_write
      # - --disable_monitor
      - --instant_rps_p_norm=0.8
      # - --always_request_worker_if_possible
      # - --disable_concurrency_limiter
      # - --gateway_conn_enable_nodelay=false
      - --io_uring_entries=1024
      - --io_uring_fd_slots=512
      # - --io_uring_sqpoll
      # - --io_uring_sq_thread_idle_ms=1
      - --io_uring_cq_nr_wait=1
      - --io_uring_cq_wait_timeout_us=0
    # ports:
    #   - 9999:9999
    depends_on:
      - faas-gateway
    volumes:
      - ${FAAS_DIR:?}:/faas
      - /mnt/inmem/faas:/tmp/faas
      - /sys/fs/cgroup:/tmp/root_cgroupfs
    environment:
      - FAAS_CGROUP_FS_ROOT=/tmp/root_cgroupfs
 
  faas-gateway:
    image: ubuntu:bionic
    hostname: faas-gateway
    entrypoint:
      - /faas/bin/release/gateway
      - --listen_addr=0.0.0.0
      - --http_port=8080
      - --func_config_file=/faas/tmp/socialnetwork.json
      - --num_io_workers=2
      # - --lb_per_fn_round_robin
      - --lb_pick_least_load
      # - --engine_conn_enable_nodelay=false
      - --max_running_requests=20
      # - --v=1
    volumes:
      - ${FAAS_DIR:?}:/faas

  # Resolving container hostnames from host machine
  # CAUTION: could affect host machine networking
#  dns-social-network:
#    image: defreitas/dns-proxy-server
#    volumes:
#      - /opt/dns-proxy-server/conf:/app/conf
#      - /var/run/docker.sock:/var/run/docker.sock
#      - /etc/resolv.conf:/etc/resolv.conf

  social-graph-service:
    image: zjia/cpp-microservice-deps:bionic
    hostname: social-graph-service
    restart: always
    entrypoint: ["/faas/tmp/run_launcher", "./build/src/SocialGraphService/libSocialGraphService.so", "1"]
    volumes:
      - ${SRC_DIR:?}:/social-network-microservices
      - ${FAAS_DIR:?}:/faas
      - /mnt/inmem/faas:/tmp/faas
    working_dir: /social-network-microservices
    depends_on:
      - faas-engine
      - socialnetwork-mongodb
  
  socialnetwork-mongodb:
    image: mongo:4.2.8-bionic
    hostname: socialnetwork-mongodb
    command: ["mongod", "--nojournal"]
    volumes:
      - /mnt/inmem/db:/data/db
#    ports:
#      - 27019:27017
    restart: always

#   socialnetwork-mongodb-t:
#     image: mongo:4.2.8-bionic
#     hostname: socialnetwork-mongodb
#     command: ["mongod", "--nojournal"]
#     volumes:
#       - /mnt/inmem/db:/data/db
# #    ports:
# #      - 27019:27017
#     restart: always

#   social-graph-mongodb:
#     image: mongo:4.2.3-bionic
#     hostname: social-graph-mongodb
# #    ports:
# #      - 27018:27017
#     restart: always

  social-graph-redis:
    image: redis:6.0.5
    hostname: social-graph-redis
    command: ["redis-server", "--save", "", "--io-threads", "4"]
#    ports:
#      - 6380:6379
    restart: always

  write-home-timeline-service:
    image: zjia/cpp-microservice-deps:bionic
    hostname: write-home-timeline-service
    restart: always
    entrypoint: /social-network-microservices/build/src/WriteHomeTimelineService/WriteHomeTimelineService
    volumes:
      - ${SRC_DIR:?}:/social-network-microservices
    working_dir: /social-network-microservices
    depends_on:
      - write-home-timeline-rabbitmq
      - socialnetwork-mongodb
    environment:
      - MAX_FOLLOWERS_TO_UPDATE=2

  write-home-timeline-rabbitmq:
    image: rabbitmq:3.8.5
    hostname: write-home-timeline-rabbitmq
    environment:
      RABBITMQ_ERLANG_COOKIE: "WRITE-HOME-TIMELINE-RABBITMQ"
      RABBITMQ_DEFAULT_VHOST: "/"
      RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS: "+S 4:4"
#    ports:
#      - 15672:15672
#      - 5672:5672
    restart: always

  home-timeline-redis:
    image: redis:6.0.5
    hostname: home-timeline-redis
    command: ["redis-server", "--save", "", "--io-threads", "4"]
#    ports:
#      - 6381:6379
    restart: always

  compose-post-service:
    image: zjia/cpp-microservice-deps:bionic
    hostname: compose-post-service
    restart: always
    entrypoint: ["/faas/tmp/run_launcher", "./build/src/ComposePostService/libComposePostService.so", "2"]
    volumes:
      - ${SRC_DIR:?}:/social-network-microservices
      - ${FAAS_DIR:?}:/faas
      - /mnt/inmem/faas:/tmp/faas
    working_dir: /social-network-microservices
    depends_on:
      - faas-engine
      - write-home-timeline-rabbitmq
      - socialnetwork-mongodb

  compose-post-redis:
    image: redis:6.0.5
    hostname: compose-post-redis
    command: ["redis-server", "--save", "", "--io-threads", "4"]
#    ports:
#      - 6382:6379
    restart: always

  post-storage-service:
    image: zjia/cpp-microservice-deps:bionic
    hostname: post-storage-service
    restart: always
    entrypoint: ["/faas/tmp/run_launcher", "./build/src/PostStorageService/libPostStorageService.so", "3"]
    volumes:
      - ${SRC_DIR:?}:/social-network-microservices
      - ${FAAS_DIR:?}:/faas
      - /mnt/inmem/faas:/tmp/faas
    working_dir: /social-network-microservices
    depends_on:
      - faas-engine
      - socialnetwork-mongodb

  post-storage-memcached:
    image: memcached:1.5.22
    hostname: post-storage-memcached
    command: ["memcached", "-m", "4096"]
#    ports:
#      - 11212:11211
    restart: always

#   post-storage-mongodb:
#     image: mongo:4.2.3-bionic
#     hostname: post-storage-mongodb
# #    ports:
# #      - 27019:27017
#     restart: always

  user-timeline-service:
    image: zjia/cpp-microservice-deps:bionic
    hostname: user-timeline-service
    restart: always
    entrypoint: ["/faas/tmp/run_launcher", "./build/src/UserTimelineService/libUserTimelineService.so", "4"]
    volumes:
      - ${SRC_DIR:?}:/social-network-microservices
      - ${FAAS_DIR:?}:/faas
      - /mnt/inmem/faas:/tmp/faas
    working_dir: /social-network-microservices
    depends_on:
      - faas-engine
      - socialnetwork-mongodb

  user-timeline-redis:
    image: redis:6.0.5
    hostname: user-timeline-redis
    command: ["redis-server", "--save", "", "--io-threads", "4"]
#    ports:
#      - 6383:6379
    restart: always

#   user-timeline-mongodb:
#     image: mongo:4.2.3-bionic
#     hostname: user-timeline-mongodb
# #    ports:
# #      - 27020:27017
#     restart: always

  url-shorten-service:
    image: zjia/cpp-microservice-deps:bionic
    hostname: url-shorten-service
    restart: always
    entrypoint: ["/faas/tmp/run_launcher", "./build/src/UrlShortenService/libUrlShortenService.so", "5"]
    volumes:
      - ${SRC_DIR:?}:/social-network-microservices
      - ${FAAS_DIR:?}:/faas
      - /mnt/inmem/faas:/tmp/faas
    working_dir: /social-network-microservices
    depends_on:
      - faas-engine
      - socialnetwork-mongodb

  url-shorten-memcached:
    image: memcached:1.5.22
    hostname: url-shorten-memcached
    command: ["memcached", "-m", "4096"]
#    ports:
#      - 11213:11211
    restart: always

#   url-shorten-mongodb:
#     image: mongo:4.2.3-bionic
#     hostname: url-shorten-mongodb
# #    ports:
# #      - 27021:27017
#     restart: always

  user-service:
    image: zjia/cpp-microservice-deps:bionic
    hostname: user-service
    restart: always
    entrypoint: ["/faas/tmp/run_launcher", "./build/src/UserService/libUserService.so", "6"]
    volumes:
      - ${SRC_DIR:?}:/social-network-microservices
      - ${FAAS_DIR:?}:/faas
      - /mnt/inmem/faas:/tmp/faas
    working_dir: /social-network-microservices
    depends_on:
      - faas-engine
      - socialnetwork-mongodb

  user-memcached:
    image: memcached:1.5.22
    hostname: user-memcached
    command: ["memcached", "-m", "4096"]
#    ports:
#      - 11214:11211
    restart: always

#   user-mongodb:
#     image: mongo:4.2.3-bionic
#     hostname: user-mongodb
# #    ports:
# #      - 27023:27017
#     restart: always

  media-service:
    image: zjia/cpp-microservice-deps:bionic
    hostname: media-service
    restart: always
    entrypoint: ["/faas/tmp/run_launcher", "./build/src/MediaService/libMediaService.so", "7"]
    volumes:
      - ${SRC_DIR:?}:/social-network-microservices
      - ${FAAS_DIR:?}:/faas
      - /mnt/inmem/faas:/tmp/faas
    working_dir: /social-network-microservices
    depends_on:
      - faas-engine
      - socialnetwork-mongodb

  media-memcached:
    image: memcached:1.5.22
    hostname: media-memcached
    command: ["memcached", "-m", "4096"]
#    ports:
#      - 11215:11211
    restart: always

#   media-mongodb:
#     image: mongo:4.2.3-bionic
#     hostname: media-mongodb
# #    ports:
# #      - 27024:27017
#     restart: always

  text-service:
    image: zjia/cpp-microservice-deps:bionic
    hostname: text-service
    restart: always
    entrypoint: ["/faas/tmp/run_launcher", "./build/src/TextService/libTextService.so", "8"]
    volumes:
      - ${SRC_DIR:?}:/social-network-microservices
      - ${FAAS_DIR:?}:/faas
      - /mnt/inmem/faas:/tmp/faas
    working_dir: /social-network-microservices
    depends_on:
      - faas-engine
      - socialnetwork-mongodb

  unique-id-service:
    image: zjia/cpp-microservice-deps:bionic
    hostname: unique-id-service
    restart: always
    entrypoint: ["/faas/tmp/run_launcher", "./build/src/UniqueIdService/libUniqueIdService.so", "9"]
    volumes:
      - ${SRC_DIR:?}:/social-network-microservices
      - ${FAAS_DIR:?}:/faas
      - /mnt/inmem/faas:/tmp/faas
    working_dir: /social-network-microservices
    depends_on:
      - faas-engine
      - socialnetwork-mongodb

  user-mention-service:
    image: zjia/cpp-microservice-deps:bionic
    hostname: user-mention-service
    restart: always
    entrypoint: ["/faas/tmp/run_launcher", "./build/src/UserMentionService/libUserMentionService.so", "10"]
    volumes:
      - ${SRC_DIR:?}:/social-network-microservices
      - ${FAAS_DIR:?}:/faas
      - /mnt/inmem/faas:/tmp/faas
    working_dir: /social-network-microservices
    depends_on:
      - faas-engine
      - socialnetwork-mongodb

  home-timeline-service:
    image: zjia/cpp-microservice-deps:bionic
    hostname: home-timeline-service
    restart: always
    entrypoint: ["/faas/tmp/run_launcher", "./build/src/HomeTimelineService/libHomeTimelineService.so", "11"]
    volumes:
      - ${SRC_DIR:?}:/social-network-microservices
      - ${FAAS_DIR:?}:/faas
      - /mnt/inmem/faas:/tmp/faas
    working_dir: /social-network-microservices
    depends_on:
      - faas-engine
      - socialnetwork-mongodb

  nginx-thrift:
    image: zjia/openresty-thrift:xenial
    hostname: nginx-thrift
    ports:
      - 8080:8080
    restart: always
    volumes:
      - ${SRC_DIR:?}/nginx-web-server/lua-scripts:/usr/local/openresty/nginx/lua-scripts
      - ${SRC_DIR:?}/nginx-web-server/pages:/usr/local/openresty/nginx/pages
      - ${SRC_DIR:?}/nginx-web-server/conf/nginx.conf:/usr/local/openresty/nginx/conf/nginx.conf
      - ${SRC_DIR:?}/nginx-web-server/jaeger-config.json:/usr/local/openresty/nginx/jaeger-config.json
      - ${SRC_DIR:?}/config/service-config.json:/social-network-microservices/config/service-config.json
      - ${SRC_DIR:?}/gen-lua:/gen-lua
      - ${SRC_DIR:?}/docker/openresty-thrift/lua-thrift:/usr/local/openresty/lualib/thrift

  media-frontend:
    image: zjia/media-frontend:xenial
    hostname: media-frontend
    ports:
      - 8081:8080
    restart: always
    volumes:
      - ${SRC_DIR:?}/media-frontend/lua-scripts:/usr/local/openresty/nginx/lua-scripts
      - ${SRC_DIR:?}/media-frontend/conf/nginx.conf:/usr/local/openresty/nginx/conf/nginx.conf

#   jaeger:
#     image: jaegertracing/all-in-one:1.14.0
#     hostname: jaeger
#     ports:
# #      - 5775:5775/udp
# #      - 6831:6831/udp
# #      - 6832:6832/udp
# #      - 5778:5778
#       - 16686:16686
# #      - 14268:14268
# #      - 9411:9411
#     restart: always
#     environment:
#       - COLLECTOR_ZIPKIN_HTTP_PORT=9411

